STEP1:サイズを480x640に指定
STEP2:ObjectPoolとCrossReferenceArrayを用意する
STEP3:ObjectPool用のダミーオブジェクトを用意する
STEP4:Pキーでポーズ/解除できるようにする
STEP5:プレイヤーをおいて動かしてみる（成功）
STEP6:entityを用意してplayerはそれ経由でいろいろやる。
あと、bulletはすべてここに持たせることにする。めんどうだから。

hide:一定時間速度の方向に進むが見えない、よって当たり判定もない。終わるとshowする
wait:一定時間速度の方向に進む。終わると次の処理。
vanish:自分を消す、Poolに戻すのと配列から無くすのと両方やる必要が。

bulletのふるまい
cannonのふるまい
おわり。

頭の中でごちゃごちゃ考えて全部実現させよう出来る限りスマートにやろう
それは無理。わかってる。
だから、ひとつひとつコツコツ行こうと思うんだけどね。
それだと限界があるんじゃないかって思っちゃうと足が止まる。そして分からなくなるんだよね。
実際もう既にいくつも尻切れトンボで放り出しちゃってるんでね。

たとえばすべてのbulletは直進して画面外で消えるだけってやっても相当いろいろなパターンが実現できるのに。
それをやらないのかっていう。
多分それで突き進んでいったあとでそれやろうとすると無理ってなっちゃうのが怖いらしい。
加速とか今いろいろ考えても仕方ない、

で、撃ち方にしてもnwayとradialだけでもいろいろ・・んー。一定間隔で・・

あるフレームに発射するパターンの・・1発なのか複数か、複数だとしてどんな風なのか、とか。
nwayとline. lineはnwayの速さバージョン。
方向は固定なのか変化するのかとか・・

ていうかjsonだかyamlだか知らないけどあれをあれにするのめちゃ面倒な気がする・・・
だから自分はArray方式でいいです。楽譜方式で。その方が楽でしょ、多分。
・・・・

if(frameCount % 10 === 0){
  const initialAngle = (frameCount % 360) * 10;
  for(let i = 0; i < 30; i++){
    let ptn = {initialize:setParam(width / 2, height / 4, 4, initialAngle + i * 12), execute:go};
    createBullet(ptn);
  }
}

・・今作ったのはradial12の速さ4でさらにangleChangeが毎フレーム+10でさらに
これが10フレームに1回だからつまり角度は100ずつずれている感じ。
これを、Cannonにやらせる？？

if(frameCount % 8 === 0){
  for(let diff = -10; diff <= 10; diff += 10){
    const pos = {x:width / 2, y:height / 4};
    const dir = getPlayerDirection(pos);
    let ptn = {initialize:setParam(pos.x, pos.y, 9, dir + diff), execute:brakeAccell(60, 0.05, 0.1)};
    createBullet(ptn);
  }
}

// waveパターンはこれでいいだろ。打ち出し方向の変化。まあいろいろあるだろうけど。
if(frameCount % 4 === 0 && frameCount % 80 < 60){
  const direction = getPlayerDirection({x:width / 2, y:height / 4}) + sin(frameCount * 4) * 30;
  let ptn = {initialize:setParam(width / 2, height / 4, 6, direction), execute:go};
  createBullet(ptn);
}

// ブレーキアクセル。エイム機能を付けてみたよ。
if(frameCount % 16 === 0){
  for(let direction = 90 - 30; direction <= 90 + 30; direction += 10){
    let ptn = {};
    ptn.initialize = setParam(width / 2, height / 4, 12, direction)
    ptn.execute = brakeAccell(60, 0.05, 0.2, true, 15);
    createBullet(ptn);
  }
}

aim作ったけどこれでいい気がするしよくわかんないな。setParamで足りるだろ。

bulletにセットするpatternがなんかinitializeとexecute持ってて
executeをupdateで実行しているのね。initializeはセットするときに発動していますね。ほーう。

今作ってるのは弾丸の基本的な挙動ですね、これからいろいろ・・んー。
nway(基本方向に対してintervalごとn発), radial(基本方向を含む円形放射状), sweep(基本方向に方向を変えながら一定時間),
sweepにはnoiseを使ったものと普通に正弦波を使ったものとあって片側までで終わるのとか
そういうのってパターンありきだから関数でいう所の1段階上っていうか高級みたいな感じ。
まあ基本はgoだけど。goのnway, goの・・・

// Destinyのような何か。これもbulletPatternの差し替えできるからある意味コンポジットの高級なのよね多分。
// 3WAYとかとも組み合わせられそうな。
if(frameCount % 60 === 0){
  let direction = getPlayerDirection({x:width / 2, y:height / 4});
  for(let i = 0; i < 64; i++){
    let distance = random(160);
    let angle = random(360);
    let x = width / 2 + cos(angle) * distance, y = height / 4 + sin(angle) * distance;
    let ptn = {initialize:setParam(x, y, 12, direction), execute:brakeAccell(30, 0.05, 0.2)};
    createBullet(ptn);
  }
}

// 要らないかな・・
function wave(period, angleChange){
  // periodで方向が元に戻る感じ。
  return (_bullet) => {
    const checkFC = _bullet.properFrameCount % period;
    if(checkFC < (period / 4) || checkFC >= (period * 3 / 4)){
      _bullet.direction += angleChange;
    }else{
      _bullet.direction -= angleChange;
    }
    _bullet.setVelocity(_bullet.speed, _bullet.direction);
    _bullet.position.add(_bullet.velocity);
  }
}

// 思い出した。んーと、何か出した後で、waitするってやつ。パターンの中に含めるんじゃないかと。
// loopもある意味コンポジット・・同じことを繰り返し。
