準備することは何かとかそういうの

Cannonの個数
Cannonの初期位置
Cannonの速さ（デフォルトは0）
Cannonの方向（デフォルトは0）
Cannonの生み出すBulletの位置とか速さとか向きとか挙動、この4つがmovingObjectの4要素と呼ばれるもの（？？）
えー・・
moveとfireは統一したほうがいい気がするんだよね
behaviorArrayの中にいろいろ入っててそれをまとめて実行するとか

コラプスのあれ使う。
behaviorArrayを毎フレームすべて実行するみたいな。
3WAYとホーミングの組み合わせとかも表現できるし動きながらのとかもできるし
関連付け・・は今はいいです混乱するので。
画面外に出たらvanish=trueもそこに含めておけば記述が簡略化される。
時間で消えるならそういうbehaviorを加えれば問題ない。
初期設定にしても一番最初に配置して最初しか実行しないって書いておくこともできる・・
[I, A0, A1, ...]
やりすぎ感
例：
パターン0なら
[位置を指定、毎フレーム2発ずつ方向ランダム速さランダムで発射], [速度と位置を指定、そのまま直進, 画面外に出たら消滅]
パターン1なら
[位置を指定、60フレームにつき1回、16個の方向に7WAYショットを発射], [速度と位置を指定、そのまま直進, 画面外に出たら消滅]
っていうのを作るだけ、あとはCannonが前者でBulletが後者、すべてこれ、とかいう。

あれは・・
[a, b, c]
a.execute(this)
b.execute(this)
c.execute(this)...



タブンネ
たぶんね、このwaitっていうのは発射した後、発射ターン含めて16なら16ターン消費したらまた撃てるとかその程度の意味
じゃないかなって思うんだよね。

[].push(8)で発射して[8].push(4)で[8, 4]で終了
[8, 3]
[8, 2]
[8, 1]
[8, 0] 0はpopで消す [8]これを[7]に、正なので発射して[7, 4]で終了
[7, 3]
...
[1, 1]
[1, 0] 0はpopで消す、[1]これを[0]に、0なので16をpushする、[16]で終了
[15]
[14]
...
[1]
[0]0はpopで消す[]になる最初に戻る最初のターンを実行する、と。

[]なら8をpush, 先頭の数が正であれば発射してpush4, 最後に先頭の数を1減らして0になった場合には
その数をpopして後ろの数を見て1減らしてそこも0ならpopして場合によっては[]になる。うん。それでいくと・・

その前に[16]になってる・・気がする。
[]でくる
[]を[8]に → 先頭が正なので発射して[8, 4] → [8, 3]に
[]でない → lengthが1でないので発射できない → [8, 2]に
... → ... → [8, 1]に
... → ... → [8, 0]→[7]に
[7]だから発射して[7, 4]にして[7, 3]に
くりかえす
32個目のフレームの後[]に戻る。

ちがう・・・・んぁ・・・・・・・・・・－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
